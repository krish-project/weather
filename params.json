{
  "name": "Weather",
  "tagline": "",
  "body": "# Project Synopsis - WeatherFORCAST\r\n\r\nThe Single HTML Page will display the weather of  a location of your choice eih by dropdown selection / by input box selection and display the data of that city. Display of current date and respective four dates.\r\n\r\n## Getting Started\r\n\r\nInitiaially steps to to proceed the project.\r\n- Requirement gathering ( API, Webserver, public repository (github - https://github.com/krish-project/weather)\r\n- Identified the requirements to build the project\r\n\t- Create a account in githhub (reason is open source file repository and webserver facility)\r\n\t- Create a signup at openweathermap.org\r\n\t- Once its been done go to tab API and get the API key\r\n\t- Check the API key in the url so that datas are coming or not.\r\n      \t\tsay \" http://api.openweathermap.org/data/2.5/forecast/city?id=524901&APPID=aeb9aeb113930e875f7ff78e75ff2514\" in my case.\r\n\r\n## Code Example\t\r\n\r\nIf we segregate each component and store each variable in different variable.\r\n\r\nvar api_path = 'http://api.openweathermap.org/data/2.5/weather?q=';\r\n\tvar apikey = '&appid=aeb9aeb113930e875f7ff78e75ff2514';\r\n\tvar units = '&units=metric';\r\nWhile calling live we will call \"url\" - \r\n\r\nfuntion wCondition() {\r\n\t\tvar url = api_path + input.value() + apikey + units;\r\n\t\t LoadJSON(\"city.json\", gotData);  \r\n                //in case of realtime inplace of json file calling locally we will call variable \"url\"//\r\n       }\r\nCurrently to test I created sample jason file locally and parsing data through wscript.js\r\n\r\nAlso to call \"City\" from \"Input box\" and \"sumit button\" declared variable and created function called \r\n\tvar input = select('#city')\r\nbutton.mousePressed(wCondition)\r\nfuntion wCondition() {\r\nvar url = api_path + input.value() + apikey + units;\t\r\nLoadJSON(\"city.json\", gotData);     //in case of realtime inplace of json file calling locally we will call variable \"url\"//\r\n}\r\n\r\n## Motivation:\r\n\r\nThe project gave me immense scope to work on weather API, understand different unit termology and use them in html through JSON.\r\nSteps pending - \r\n1) Actual data pulling from realtime data\r\n2) Selection of \"City\" from input box and display data accordingly.\r\n\r\n### Prerequisities Installation\r\n1) Software named Notepad ++ / Dreamweaver \r\n2) Adobe Photoshop for designing purpuse.\r\n\r\n###  Site Reference\r\nAPI ID: - aeb9aeb113930e875f7ff78e75ff2514\r\nSite - http://www.jsoneditoronline.org/ - To make data formated and get the objects.\r\nSite - https://jsonformatter.curiousconcept.com/ - To test json's validation.\r\n\r\n## Running the tests\r\nClick on the link - \r\nSelect Blank Field shows alert\r\nCurrent Weather data fetching from \"city.json\"\r\n\r\n### coding style tests\r\nCSS - Taken existing Style of mine and worked.\r\n\r\n## Deployment\r\nUploaded in the site url - \r\nAdd additional notes about how to deploy this on a live system\r\n\r\n## Process can be incorporated - \r\nuploaded to the server - https://github.com/krish-project/weather direct to master folder\r\nCommit changes if needed further modification and can be dune under each epic branch created under master\r\nFurther modification can be done by pull from the master to local directory once done can raise pull request and send for review to other developers. Once the code reviewed it can be merged with main branch \"master\"\r\nWe can pull or push through Sourcetree software. \r\nOnce modification ticket created in the jira we can create branch under bitbucket and pull code through sourcetree.\r\n\r\n## Versioning\r\nSource tree / bibucket can take care of vertion control. \r\n\r\n## Authors\r\n\r\n* **Krishnendu Chatterjee** - *Initial work* - [WeatherFORCAST](https://github.com/PurpleBooth)\r\n\r\nSee also the list of [contributors](https://github.com/krish-project/weather) \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}